/* *************************************************************************
This file contains the lcd display functions. 
 > display_instructions() : Instructions on how to set the desired temperature and times.
 > display_thingUserSelectedp() : Displays the desired temp or time.
 > display_currentTemp() : Current temp on first line and the time to desired temp on 2nd line.
*************************************************************************** */

void display_instructions()
{
  lcd.clear();
  lcd.print("Set Temps&Times.");
  delay(2500);
  lcd.clear();
  lcd.print("Up/Down by 1"); lcd.print((char)223);lcd.print("C");
  lcd.setCursor(0,1);
  lcd.print("Lft/Rgt by 50");lcd.print((char)223);lcd.print("C");
  delay(2500);
  lcd.clear();
  lcd.print("Press Select");
  lcd.setCursor(0,1);
  lcd.print("when finished.");
  delay(2000);
}

void display_thingUserSelected(double thingToDisplay, boolean timeOrTemp) // timeOrTemp is true when we are displaying a temp and false when we are displaying a time
{
  lcd.clear();
  if(timeOrTemp){ // We are displaying a temp
    lcd.print("Set Temp: ");
    lcd.print(thingToDisplay);lcd.print((char)223);lcd.print("C");
    delay(300);
   }
  if(!timeOrTemp){ // We are displaying a time
     lcd.print("Set Time: ");
     lcd.print(thingToDisplay); lcd.print(" s");
     delay(300);
    }
}  

void display_currentTemp() 
{
  lcd.clear();  // Clear the LCD
  
  // Display current temperature.
  lcd.print("Current:");   
  lcd.print(currentTemp);
  lcd.print( (char)223);
  lcd.print("C");
  
  // Display the set point temperature which the controller is trying to reach.
 if (desiredTime<=runTime) {
  lcd.setCursor(0,1); 
  lcd.print(desiredTime-runTime); 
  lcd.print("s until ");
  lcd.print(desiredTemp);  
  lcd.print( (char)223);
  lcd.print("C");
  delay(1000);
  }
}
