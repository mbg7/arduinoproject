/* ***********************************************************************
This file contains the user interaction functions.  These allow the user
to set their desired temperature and desired time. If the user selects a 
temp that is maxTemp or below minTemp, they will be warned and asked to reinput.
************************************************************************ */

boolean userFinished = false; // Is the user done setting the temp?

// define some values used by the panel and buttons
int lcd_key = 0;
int adc_key_in = 0;
#define btnRIGHT 0
#define btnUP 1
#define btnDOWN 2
#define btnLEFT 3
#define btnSELECT 4
#define btnNONE 5
#define V1 (0+50)
#define V2 (50+99)
#define V3 (50+255)
#define V4 (50+409)
#define V5 (50+639)
#define VNONE (50+1023)



// read the buttons
int read_LCD_buttons()
{
  adc_key_in = analogRead(0); // read the value from the sensor
  // my buttons when read are centered at these valies: 0, 144, 329, 504, 741
  // we add approx 50 to those values and check to see if we are close
  if (adc_key_in > VNONE) return btnNONE; // We make this the 1st option for speed reasons since it will be the most likely result
  if (adc_key_in < V1) return btnRIGHT;
  if (adc_key_in < V2) return btnUP;
  if (adc_key_in < V3) return btnDOWN;
  if (adc_key_in < V4) return btnLEFT;
  if (adc_key_in < V5) return btnSELECT;
  return btnNONE; // when all others fail, return this...
}


/*******************************************************************************************
This method inputs, adjusts, and then outputs thingToAdjust, which can be a time or a temp.
*******************************************************************************************/
double userAdjust(double thingToAdjust){ 
  lcd_key = read_LCD_buttons(); // read the buttons
  switch (lcd_key) // depending on which button was pushed, we perform an action
  {
    case btnRIGHT:
    {
      thingToAdjust= thingToAdjust-50;
      display_thingUserSelected(thingToAdjust);
      break;
    }
    case btnLEFT:
    {
      thingToAdjust = thingToAdjust+50;
      display_thingUserSelected(thingToAdjust);
      break;
    }
    case btnUP:
    {
      thingToAdjust= thingToAdjust+1;
      display_thingUserSelected(thingToAdjust);
      break;
    }
    case btnDOWN:
    {
      thingToAdjust = thingToAdjust-1;
      display_thingUserSelected(thingToAdjust);
      break;
    }
    case btnSELECT:
    {
      userFinished = true;
      break;
    }
    case btnNONE:
    {
      display_thingUserSelected(thingToAdjust);
      break;
    }
  }
  return thingToAdjust;
}


/*******************************************************************************************
This method makes a variable tempToSet, asks the user to adjust it, and then outputs that 
tempToSet.  It does not let the user select temps that are too hot or too cold.
*******************************************************************************************/
double setDesiredTemp()
{
  double tempToSet = 0;
  userFinished = false;
  while(userFinished == false){
    userAdjust(tempToSet);
  }
  userFinished = false;
  while(tempToSet>maxTemp || tempToSetminTemp){ // Safety Check to make sure the user isn't selecting a temp that is too high or too low
        lcd.clear();
        lcd.print("Invalid Temp!"); delay(2000);
        lcd.clear();
        lcd.print("Max is ");lcd.print(maxTemp);lcd.print((char)223);lcd.print("C");
        lcd.setCursor(0,1);
        lcd.print("Min is ");lcd.print(minTemp);lcd.print((char)223);lcd.print("C");
        delay(2000);
        lcd.clear();
        lcd.print("Select New Temp:"); delay(1500);
        while(userFinished == false){
          userAdjust(tempToSet);
        }
        userFinished = false;
  }
  lcd.clear();
  lcd.print("Temp Set.");
  lcd.setCursor(0,1);
  lcd.print("Desired = ");
  lcd.print(tempToSet);lcd.print((char)223);lcd.print("C");
  delay(2000);

  return tempToSet;
}


/*******************************************************************************************
This method makes a variable timeToSet, asks the user to adjust it, and then outputs that timeToSet.
*******************************************************************************************/
double setDesiredTime()
{
  double timeToSet = 0;
  userFinished = false;
  while(userFinished == false){
    userAdjust(timeToSet); 
  }
  userFinished = false;
  lcd.clear();
  lcd.print("Time Set.");
  lcd.setCursor(0,1);
  lcd.print("Desired t = ");
  lcd.print(timeToSet);lcd.print("s");
  delay(2000);

  desiredTimeSet = true;
  return timeToSet;
}
